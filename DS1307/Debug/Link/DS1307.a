;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	data -> R17
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;	*str -> R16,R17
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;	value -> Y+14
;	buf -> Y+6
;	index -> R16,R17
;	i -> R18,R19
;	j -> R20,R21
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;void i2c_Begin()
; 0000 0009 {
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 000A PORTC  |= (1 << SCL_PIN) | (1 << SDA_PIN);
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 000B DDRC |= (1 << SCL_PIN) | (1 << SDA_PIN);
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 000C }
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;void setMode(unsigned char mode)
; 0000 000F {
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 0010 if (mode)
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;	mode -> R17
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0011 DDRC |= (1 << SDA_PIN);
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0012 else
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0013 DDRC &= ~(1 << SDA_PIN);
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 0014 }
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;static void i2c_Clock(void)
; 0000 0017 {
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0018 PORTC  |= (1 << SCL_PIN);
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 0019 delay_us(4);
;PCODE: $00000098 VOL: 0
; 0000 001A PORTC  &= ~(1 << SCL_PIN);
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 001B delay_us(5);
;PCODE: $0000009B VOL: 0
; 0000 001C }
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;void i2c_Start(void)
; 0000 001F {
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 0020 PORTC  |= (1 << SDA_PIN);
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 0021 delay_us(4);
;PCODE: $000000A2 VOL: 0
; 0000 0022 PORTC  |= (1 << SCL_PIN);
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0023 delay_us(4);
;PCODE: $000000A5 VOL: 0
; 0000 0024 
; 0000 0025 PORTC  &= ~(1 << SDA_PIN);
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0026 delay_us(4);
;PCODE: $000000A8 VOL: 0
; 0000 0027 PORTC  &= ~(1 << SCL_PIN);
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0028 delay_us(4);
;PCODE: $000000AB VOL: 0
; 0000 0029 }
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;void i2c_Stop(void)
; 0000 002C {
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 002D PORTC  &= ~(1 << SDA_PIN);
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 002E delay_us(4);
;PCODE: $000000B2 VOL: 0
; 0000 002F PORTC  |= (1 << SCL_PIN);
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 0030 delay_us(5);
;PCODE: $000000B5 VOL: 0
; 0000 0031 PORTC  |= (1 << SDA_PIN);
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 0032 delay_us(5);
;PCODE: $000000B8 VOL: 0
; 0000 0033 }
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;unsigned int bcd2dec(unsigned int num)
; 0000 0036 {
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 0037 return ((num / 16 * 10) + (num % 16));
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;	num -> R16,R17
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 0038 }
;PCODE: $000000CA VOL: 0
;unsigned int dec2bcd(unsigned int num)
; 0000 003B {
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 003C return ((num / 10 * 16) + (num % 10));
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;	num -> R16,R17
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 003D }
;PCODE: $000000DB VOL: 0
;unsigned int i2c_Write(unsigned int Data)
; 0000 0040 {
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 0041 unsigned int i, x = 0, ack;
; 0000 0042 
; 0000 0043 for (i = 0; i < 8; i++)
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;	Data -> Y+6
;	i -> R16,R17
;	x -> R18,R19
;	ack -> R20,R21
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 0044 {
; 0000 0045 x = Data & 0x80;
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 0046 PORTC  &= ~(1 << SDA_PIN);
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 0047 if (x)
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 0048 PORTC  |= (1 << SDA_PIN);
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 0049 i2c_Clock();
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 004A Data = Data << 1;
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 004B }
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 004C 
; 0000 004D setMode(0);
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 004E PORTC  |= (1 << SCL_PIN);
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 004F delay_us(2);
;PCODE: $00000102 VOL: 0
; 0000 0050 ack = PINC & (1 << SDA_PIN);
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 0051 PORTC  &= ~(1 << SCL_PIN);
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 0052 delay_us(5);
;PCODE: $00000109 VOL: 0
; 0000 0053 setMode(1);
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 0054 
; 0000 0055 return ack;
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 0056 }
;PCODE: $00000110 VOL: 0
;void ds1307_Init(void)
; 0000 0059 {
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 005A i2c_Begin();
;PCODE: $00000113 VOL: 0
; 0000 005B i2c_Start();
;PCODE: $00000114 VOL: 0
; 0000 005C i2c_Write(0xD0);
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 005D i2c_Write(0x07);
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 005E i2c_Write(0x00);
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 005F i2c_Stop();
;PCODE: $0000011E VOL: 0
; 0000 0060 }
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;unsigned int I2C_Read(unsigned int ACK)
; 0000 0063 {
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 0064 unsigned int i, Data = 0;
; 0000 0065 
; 0000 0066 setMode(0);
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;	ACK -> R20,R21
;	i -> R16,R17
;	Data -> R18,R19
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 0067 PORTC  &= ~(1 << SCL_PIN);
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 0068 delay_us(4);
;PCODE: $0000012B VOL: 0
; 0000 0069 for (i = 0; i < 8; i++)
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 006A {
; 0000 006B PORTC  |= (1 << SCL_PIN);
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 006C Data <<= 1;
;PCODE: $00000137 VOL: 0
; 0000 006D if (PINC & (1 << SDA_PIN))
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 006E Data |= 0x01;
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 006F PORTC  &= ~(1 << SCL_PIN);
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 0070 delay_us(5);
;PCODE: $00000140 VOL: 0
; 0000 0071 }
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0000 0072 
; 0000 0073 setMode(1);
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 0074 if (ACK)
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 0075 PORTC  &= ~(1 << SDA_PIN);
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 0076 else
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0000 0077 PORTC  |= (1 << SDA_PIN);
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 0078 
; 0000 0079 PORTC  |= (1 << SCL_PIN);
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0000 007A delay_us(4);
;PCODE: $00000153 VOL: 0
; 0000 007B PORTC  &= ~(1 << SCL_PIN);
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0000 007C delay_us(4);
;PCODE: $00000156 VOL: 0
; 0000 007D 
; 0000 007E return Data;
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 007F }
;PCODE: $0000015B VOL: 0
;void ds1307_Read()
; 0000 0082 {
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 0083 i2c_Start();
;PCODE: $0000015E VOL: 0
; 0000 0084 i2c_Write(0xD0);
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
; 0000 0085 i2c_Write(0x00);
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 0086 i2c_Start();
;PCODE: $00000165 VOL: 0
; 0000 0087 i2c_Write(0xD1);
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 0088 sec = bcd2dec(I2C_Read(1));
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 0089 min = bcd2dec(I2C_Read(1));
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 008A hour = bcd2dec(I2C_Read(1));
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 008B weekday = bcd2dec(I2C_Read(1));
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0000 008C date = bcd2dec(I2C_Read(1));
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
; 0000 008D month = bcd2dec(I2C_Read(1));
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
; 0000 008E year = bcd2dec(I2C_Read(0));
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 008F year += 2000;
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
; 0000 0090 i2c_Stop();
;PCODE: $00000196 VOL: 0
; 0000 0091 }
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;void ds1307_SetTime(unsigned int sec, unsigned int min, unsigned int hour)
; 0000 0094 {
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0000 0095 i2c_Start();
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;	sec -> R20,R21
;	min -> R18,R19
;	hour -> R16,R17
;PCODE: $000001A1 VOL: 0
; 0000 0096 i2c_Write(0xD0);
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 0097 i2c_Write(0x00);
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
; 0000 0098 i2c_Write(dec2bcd(sec));
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
; 0000 0099 i2c_Stop();
;PCODE: $000001AC VOL: 0
; 0000 009A 
; 0000 009B i2c_Start();
;PCODE: $000001AD VOL: 0
; 0000 009C i2c_Write(0xD0);
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0000 009D i2c_Write(0x01);
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
; 0000 009E i2c_Write(dec2bcd(min));
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
; 0000 009F i2c_Stop();
;PCODE: $000001B8 VOL: 0
; 0000 00A0 
; 0000 00A1 i2c_Start();
;PCODE: $000001B9 VOL: 0
; 0000 00A2 i2c_Write(0xD0);
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 00A3 i2c_Write(0x02);
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
; 0000 00A4 i2c_Write(dec2bcd(hour));
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0000 00A5 i2c_Stop();
;PCODE: $000001C4 VOL: 0
; 0000 00A6 }
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;void ds1307_SetDate(unsigned int weekday, unsigned int date, unsigned int month, unsigned int year)
; 0000 00A9 {
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0000 00AA i2c_Start();
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;	weekday -> Y+10
;	date -> R20,R21
;	month -> R18,R19
;	year -> R16,R17
;PCODE: $000001D1 VOL: 0
; 0000 00AB i2c_Write(0xD0);
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
; 0000 00AC i2c_Write(0x03);
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
; 0000 00AD i2c_Write(dec2bcd(weekday));
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
; 0000 00AE i2c_Stop();
;PCODE: $000001DC VOL: 0
; 0000 00AF 
; 0000 00B0 i2c_Start();
;PCODE: $000001DD VOL: 0
; 0000 00B1 i2c_Write(0xD0);
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
; 0000 00B2 i2c_Write(0x04);
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
; 0000 00B3 i2c_Write(dec2bcd(date));
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
; 0000 00B4 i2c_Stop();
;PCODE: $000001E8 VOL: 0
; 0000 00B5 
; 0000 00B6 i2c_Start();
;PCODE: $000001E9 VOL: 0
; 0000 00B7 i2c_Write(0xD0);
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
; 0000 00B8 i2c_Write(0x05);
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
; 0000 00B9 i2c_Write(dec2bcd(month));
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
; 0000 00BA i2c_Stop();
;PCODE: $000001F4 VOL: 0
; 0000 00BB 
; 0000 00BC i2c_Start();
;PCODE: $000001F5 VOL: 0
; 0000 00BD i2c_Write(0xD0);
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
; 0000 00BE i2c_Write(0x06);
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0000 00BF i2c_Write(dec2bcd(year));
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
; 0000 00C0 i2c_Stop();
;PCODE: $00000200 VOL: 0
; 0000 00C1 }
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;void main()
; 0000 00C4 {
;PCODE: $00000205 VOL: 0
; 0000 00C5 
; 0000 00C6 uart_init();
;PCODE: $00000206 VOL: 0
; 0000 00C7 ds1307_Init();
;PCODE: $00000207 VOL: 0
; 0000 00C8 ds1307_SetTime(50, 59, 23);
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
; 0000 00C9 ds1307_SetDate(3, 30, 5, 23);
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
; 0000 00CA while (1)
;PCODE: $00000218 VOL: 0
; 0000 00CB {
; 0000 00CC ds1307_Read();
;PCODE: $00000219 VOL: 0
; 0000 00CD putstring("Time: ");
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0000 00CE putint(hour);
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 00CF putstring(":");
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
; 0000 00D0 putint(min);
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
; 0000 00D1 putstring(":");
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
; 0000 00D2 putint(sec);
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
; 0000 00D3 putstring(" ");
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
; 0000 00D4 putstring("Thu:");
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
; 0000 00D5 putint(weekday);
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
; 0000 00D6 putstring(" Ngay:");
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
; 0000 00D7 putint(date);
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
; 0000 00D8 putstring("/");
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0000 00D9 putint(month);
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
; 0000 00DA putstring("/");
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
; 0000 00DB putint(year);
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
; 0000 00DC putstring("\n");
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
; 0000 00DD delay_ms(1000);
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
; 0000 00DE if (hour ==0 && min == 0){
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
; 0000 00DF PORTB.1 = 1;
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
; 0000 00E0 delay_ms(500);
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
; 0000 00E1 PORTB.1 = 0;
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
; 0000 00E2 delay_ms(500);
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
; 0000 00E3 }
; 0000 00E4 }
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
; 0000 00E5 }
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0

	.DSEG
_0x1F:
	.BYTE 0x1F
