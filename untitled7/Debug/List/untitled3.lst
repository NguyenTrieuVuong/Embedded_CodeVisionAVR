
AVRASM ver. 2.1.30  E:\CodeVisionAVR\untitled7\Debug\List\untitled3.asm Wed Apr 12 23:30:21 2023

E:\CodeVisionAVR\untitled7\Debug\List\untitled3.asm(1420): warning: Register r4 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.51 Evaluation
                 ;(C) Copyright 1998-2023 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPMCSR=0x37
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 	.EQU __EEPROM_PAGE_SIZE=0x04
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _rxdata=R4
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 005d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 _0x0:
000034 6947
000035 2061
000036 7274
000037 2069      	.DB  0x47,0x69,0x61,0x20,0x74,0x72,0x69,0x20
000038 4441
000039 3a43
00003a 0020
00003b 000a      	.DB  0x41,0x44,0x43,0x3A,0x20,0x0,0xA,0x0
00003c 6947
00003d 2061
00003e 7274
00003f 2069      	.DB  0x47,0x69,0x61,0x20,0x74,0x72,0x69,0x20
000040 6964
000041 6e65
000042 6120
000043 3a70      	.DB  0x64,0x69,0x65,0x6E,0x20,0x61,0x70,0x3A
000044 0020
000045 002e
000046 7620
000047 6c6f      	.DB  0x20,0x0,0x2E,0x0,0x20,0x76,0x6F,0x6C
000048 0a20
E:\CodeVisionAVR\untitled7\Debug\List\untitled3.asm(1465): warning: .cseg .db misalignment - padding zero byte
000049 0000      	.DB  0x20,0xA,0x0
                 
                 __GLOBAL_INI_TBL:
00004a 000e      	.DW  0x0E
00004b 0300      	.DW  _0x19
00004c 0068      	.DW  _0x0*2
                 
00004d 0002      	.DW  0x02
00004e 030e      	.DW  _0x19+14
00004f 0076      	.DW  _0x0*2+14
                 
000050 0002      	.DW  0x02
000051 0310      	.DW  _0x19+16
000052 0076      	.DW  _0x0*2+14
                 
000053 0012      	.DW  0x12
000054 0312      	.DW  _0x19+18
000055 0078      	.DW  _0x0*2+16
                 
000056 0002      	.DW  0x02
000057 0324      	.DW  _0x19+36
000058 008a      	.DW  _0x0*2+34
                 
000059 0007      	.DW  0x07
00005a 0326      	.DW  _0x19+38
00005b 008c      	.DW  _0x0*2+36
                 
                 _0xFFFFFFFF:
00005c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00005d 94f8      	CLI
00005e 27ee      	CLR  R30
00005f bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000060 e0f1      	LDI  R31,1
000061 bff5      	OUT  MCUCR,R31
000062 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000063 e08d      	LDI  R24,(14-2)+1
000064 e0a2      	LDI  R26,2
000065 27bb      	CLR  R27
                 __CLEAR_REG:
000066 93ed      	ST   X+,R30
000067 958a      	DEC  R24
000068 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000069 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00006a e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00006b e0a0      	LDI  R26,LOW(__SRAM_START)
00006c e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00006d 93ed      	ST   X+,R30
00006e 9701      	SBIW R24,1
00006f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000070 e9e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000071 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000072 9185      	LPM  R24,Z+
000073 9195      	LPM  R25,Z+
000074 9700      	SBIW R24,0
000075 f061      	BREQ __GLOBAL_INI_END
000076 91a5      	LPM  R26,Z+
000077 91b5      	LPM  R27,Z+
000078 9005      	LPM  R0,Z+
000079 9015      	LPM  R1,Z+
00007a 01bf      	MOVW R22,R30
00007b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00007c 9005      	LPM  R0,Z+
00007d 920d      	ST   X+,R0
00007e 9701      	SBIW R24,1
00007f f7e1      	BRNE __GLOBAL_INI_LOOP
000080 01fb      	MOVW R30,R22
000081 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
000082 e0e0      	LDI  R30,__GPIOR0_INIT
000083 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000084 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000085 bfed      	OUT  SPL,R30
000086 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000087 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000088 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000089 e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00008a 940c 0102 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 
                 	.CSEG
                 _uart_transmit:
                 ; .FSTART _uart_transmit
00008c 931a      	ST   -Y,R17
00008d 2f1a      	MOV  R17,R26
                 ;	data -> R17
                 _0x3:
00008e 91e0 00c0 	LDS  R30,192
000090 72e0      	ANDI R30,LOW(0x20)
000091 f3e1      	BREQ _0x3
000092 9310 00c6 	STS  198,R17
000094 c06b      	RJMP _0x2000001
                 ; .FEND
                 _putstring:
                 ; .FSTART _putstring
000095 931a      	ST   -Y,R17
000096 930a      	ST   -Y,R16
000097 018d      	MOVW R16,R26
                 ;	*str -> R16,R17
                 _0x6:
000098 01d8      	MOVW R26,R16
000099 91ec      	LD   R30,X
00009a 30e0      	CPI  R30,0
00009b f059      	BREQ _0x8
00009c 91ac      	LD   R26,X
00009d dfee      	RCALL _uart_transmit
00009e 01d8      	MOVW R26,R16
00009f 91ac      	LD   R26,X
0000a0 30aa      	CPI  R26,LOW(0xA)
0000a1 f411      	BRNE _0x9
0000a2 e0ad      	LDI  R26,LOW(13)
0000a3 dfe8      	RCALL _uart_transmit
                 _0x9:
                +
0000a4 5f0f     +SUBI R16 , LOW ( - 1 )
0000a5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0000a6 cff1      	RJMP _0x6
                 _0x8:
0000a7 9109      	LD   R16,Y+
0000a8 9119      	LD   R17,Y+
0000a9 9508      	RET
                 ; .FEND
                 _putint:
                 ; .FSTART _putint
0000aa 93ba      	ST   -Y,R27
0000ab 93aa      	ST   -Y,R26
0000ac 9728      	SBIW R28,8
0000ad d0db      	RCALL __SAVELOCR6
                 ;	value -> Y+14
                 ;	buf -> Y+6
                 ;	index -> R16,R17
                 ;	i -> R18,R19
                 ;	j -> R20,R21
                +
0000ae e000     +LDI R16 , LOW ( 0 )
0000af e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0000b0 854e     +LDD R20 , Y + 14
0000b1 855f     +LDD R21 , Y + 14 + 1
                 	__GETWRS 20,21,14
                 _0xB:
0000b2 01f8      	MOVW R30,R16
0000b3 01de      	MOVW R26,R28
0000b4 9616      	ADIW R26,6
0000b5 0fea      	ADD  R30,R26
0000b6 1ffb      	ADC  R31,R27
0000b7 01bf      	MOVW R22,R30
0000b8 01da      	MOVW R26,R20
0000b9 e0ea      	LDI  R30,LOW(10)
0000ba e0f0      	LDI  R31,HIGH(10)
0000bb d143      	RCALL __MODW21
0000bc 5de0      	SUBI R30,-LOW(48)
0000bd 01db      	MOVW R26,R22
0000be 93ec      	ST   X,R30
0000bf 01da      	MOVW R26,R20
0000c0 e0ea      	LDI  R30,LOW(10)
0000c1 e0f0      	LDI  R31,HIGH(10)
0000c2 d113      	RCALL __DIVW21
0000c3 01af      	MOVW R20,R30
                +
0000c4 5f0f     +SUBI R16 , LOW ( - 1 )
0000c5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0000c6 2e04      	MOV  R0,R20
0000c7 2a05      	OR   R0,R21
0000c8 f749      	BRNE _0xB
0000c9 0198      	MOVW R18,R16
                 _0xE:
0000ca 2400      	CLR  R0
0000cb 1602      	CP   R0,R18
0000cc 0603      	CPC  R0,R19
0000cd f45c      	BRGE _0xF
0000ce 01f9      	MOVW R30,R18
0000cf 9731      	SBIW R30,1
0000d0 01de      	MOVW R26,R28
0000d1 9616      	ADIW R26,6
0000d2 0fae      	ADD  R26,R30
0000d3 1fbf      	ADC  R27,R31
0000d4 91ac      	LD   R26,X
0000d5 dfb6      	RCALL _uart_transmit
                +
0000d6 5021     +SUBI R18 , LOW ( 1 )
0000d7 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
0000d8 cff1      	RJMP _0xE
                 _0xF:
0000d9 d0b6      	RCALL __LOADLOCR6
0000da 9660      	ADIW R28,16
0000db 9508      	RET
                 ; .FEND
                 _uart_init:
                 ; .FSTART _uart_init
0000dc e0e0      	LDI  R30,LOW(0)
0000dd 93e0 00c5 	STS  197,R30
0000df e6e7      	LDI  R30,LOW(103)
0000e0 93e0 00c4 	STS  196,R30
0000e2 e0e6      	LDI  R30,LOW(6)
0000e3 93e0 00c2 	STS  194,R30
0000e5 e9e8      	LDI  R30,LOW(152)
0000e6 93e0 00c1 	STS  193,R30
0000e8 9478      	SEI
0000e9 9508      	RET
                 ; .FEND
                 _ADC_init:
                 ; .FSTART _ADC_init
0000ea 931a      	ST   -Y,R17
0000eb 2f1a      	MOV  R17,R26
                 ;	input -> R17
0000ec 2fe1      	MOV  R30,R17
0000ed 64e0      	ORI  R30,0x40
0000ee 93e0 007c 	STS  124,R30
0000f0 e8e7      	LDI  R30,LOW(135)
0000f1 93e0 007a 	STS  122,R30
0000f3 e7ae      	LDI  R26,LOW(126)
0000f4 e0b0      	LDI  R27,HIGH(126)
0000f5 2f6a      	MOV  R22,R26
0000f6 901c      	LD   R1,X
0000f7 2fe1      	MOV  R30,R17
0000f8 e0a1      	LDI  R26,LOW(1)
0000f9 d0a1      	RCALL __LSLB12
0000fa 29e1      	OR   R30,R1
0000fb 2fa6      	MOV  R26,R22
0000fc 93ec      	ST   X,R30
0000fd e0aa      	LDI  R26,LOW(10)
0000fe e0b0      	LDI  R27,0
0000ff d11f      	RCALL _delay_ms
                 _0x2000001:
000100 9119      	LD   R17,Y+
000101 9508      	RET
                 ; .FEND
                 ;	input -> R17
                 ;void main(void)
                 ; 0000 004C {
                 _main:
                 ; .FSTART _main
                 ; 0000 004D uart_init();
000102 dfd9      	RCALL _uart_init
                 ; 0000 004E ADC_init(1<<REFS0);
000103 e4a0      	LDI  R26,LOW(64)
000104 dfe5      	RCALL _ADC_init
                 ; 0000 004F while (1)
                 _0x13:
                 ; 0000 0050 {
                 ; 0000 0051 // Please write your application code here
                 ; 0000 0052 ADCSRA |= 0b01000000;
000105 91e0 007a 	LDS  R30,122
000107 64e0      	ORI  R30,0x40
000108 93e0 007a 	STS  122,R30
                 ; 0000 0053 while((ADCSRA & 0b00010000) ==0);
                 _0x16:
00010a 91e0 007a 	LDS  R30,122
00010c 71e0      	ANDI R30,LOW(0x10)
00010d f3e1      	BREQ _0x16
                 ; 0000 0054 adc_value = ADCW;
00010e 91e0 0078 	LDS  R30,120
000110 91f0 0079 	LDS  R31,120+1
000112 2766      	CLR  R22
000113 2777      	CLR  R23
000114 93e0 032d 	STS  _adc_value,R30
000116 93f0 032e 	STS  _adc_value+1,R31
000118 9360 032f 	STS  _adc_value+2,R22
00011a 9370 0330 	STS  _adc_value+3,R23
                 ; 0000 0055 ADCSRA |= 0b00010000;
00011c 91e0 007a 	LDS  R30,122
00011e 61e0      	ORI  R30,0x10
00011f 93e0 007a 	STS  122,R30
                 ; 0000 0056 putstring("Gia tri ADC: ");
                +
000121 e0a0     +LDI R26 , LOW ( _0x19 + ( 0 ) )
000122 e0b3     +LDI R27 , HIGH ( _0x19 + ( 0 ) )
                 	__POINTW2MN _0x19,0
000123 df71      	RCALL _putstring
                 ; 0000 0057 putint(adc_value);
000124 91a0 032d 	LDS  R26,_adc_value
000126 91b0 032e 	LDS  R27,_adc_value+1
000128 df81      	RCALL _putint
                 ; 0000 0058 putstring("\n");
                +
000129 e0ae     +LDI R26 , LOW ( _0x19 + ( 14 ) )
00012a e0b3     +LDI R27 , HIGH ( _0x19 + ( 14 ) )
                 	__POINTW2MN _0x19,14
00012b df69      	RCALL _putstring
                 ; 0000 0059 voltage_val = adc_value*500/1024;
00012c 91e0 032d 	LDS  R30,_adc_value
00012e 91f0 032e 	LDS  R31,_adc_value+1
000130 9160 032f 	LDS  R22,_adc_value+2
000132 9170 0330 	LDS  R23,_adc_value+3
                +
000134 efa4     +LDI R26 , LOW ( 0x1F4 )
000135 e0b1     +LDI R27 , HIGH ( 0x1F4 )
000136 e080     +LDI R24 , BYTE3 ( 0x1F4 )
000137 e090     +LDI R25 , BYTE4 ( 0x1F4 )
                 	__GETD2N 0x1F4
000138 d06a      	RCALL __MULD12U
000139 01df      	MOVW R26,R30
00013a 01cb      	MOVW R24,R22
                +
00013b e0e0     +LDI R30 , LOW ( 0x400 )
00013c e0f4     +LDI R31 , HIGH ( 0x400 )
00013d e060     +LDI R22 , BYTE3 ( 0x400 )
00013e e070     +LDI R23 , BYTE4 ( 0x400 )
                 	__GETD1N 0x400
00013f d09b      	RCALL __DIVD21U
000140 93e0 0331 	STS  _voltage_val,R30
000142 93f0 0332 	STS  _voltage_val+1,R31
000144 9360 0333 	STS  _voltage_val+2,R22
000146 9370 0334 	STS  _voltage_val+3,R23
                 ; 0000 005A putint(voltage_val);
000148 91a0 0331 	LDS  R26,_voltage_val
00014a 91b0 0332 	LDS  R27,_voltage_val+1
00014c df5d      	RCALL _putint
                 ; 0000 005B putstring("\n");
                +
00014d e1a0     +LDI R26 , LOW ( _0x19 + ( 16 ) )
00014e e0b3     +LDI R27 , HIGH ( _0x19 + ( 16 ) )
                 	__POINTW2MN _0x19,16
00014f df45      	RCALL _putstring
                 ; 0000 005C 
                 ; 0000 005D demi_part = voltage_val%100;
000150 d02b      	RCALL SUBOPT_0x0
000151 d0bb      	RCALL __MODD21U
000152 93e0 0335 	STS  _demi_part,R30
000154 93f0 0336 	STS  _demi_part+1,R31
000156 9360 0337 	STS  _demi_part+2,R22
000158 9370 0338 	STS  _demi_part+3,R23
                 ; 0000 005E int_part = voltage_val/100;
00015a d021      	RCALL SUBOPT_0x0
00015b d07f      	RCALL __DIVD21U
00015c 93e0 0339 	STS  _int_part,R30
00015e 93f0 033a 	STS  _int_part+1,R31
000160 9360 033b 	STS  _int_part+2,R22
000162 9370 033c 	STS  _int_part+3,R23
                 ; 0000 005F putstring("Gia tri dien ap: ");
                +
000164 e1a2     +LDI R26 , LOW ( _0x19 + ( 18 ) )
000165 e0b3     +LDI R27 , HIGH ( _0x19 + ( 18 ) )
                 	__POINTW2MN _0x19,18
000166 df2e      	RCALL _putstring
                 ; 0000 0060 putint(int_part);
000167 91a0 0339 	LDS  R26,_int_part
000169 91b0 033a 	LDS  R27,_int_part+1
00016b df3e      	RCALL _putint
                 ; 0000 0061 putstring(".");
                +
00016c e2a4     +LDI R26 , LOW ( _0x19 + ( 36 ) )
00016d e0b3     +LDI R27 , HIGH ( _0x19 + ( 36 ) )
                 	__POINTW2MN _0x19,36
00016e df26      	RCALL _putstring
                 ; 0000 0062 putint(demi_part);
00016f 91a0 0335 	LDS  R26,_demi_part
000171 91b0 0336 	LDS  R27,_demi_part+1
000173 df36      	RCALL _putint
                 ; 0000 0063 putstring(" vol \n");
                +
000174 e2a6     +LDI R26 , LOW ( _0x19 + ( 38 ) )
000175 e0b3     +LDI R27 , HIGH ( _0x19 + ( 38 ) )
                 	__POINTW2MN _0x19,38
000176 df1e      	RCALL _putstring
                 ; 0000 0064 delay_ms(3000);
000177 eba8      	LDI  R26,LOW(3000)
000178 e0bb      	LDI  R27,HIGH(3000)
000179 d0a5      	RCALL _delay_ms
                 ; 0000 0065 }
00017a cf8a      	RJMP _0x13
                 ; 0000 0066 }
                 _0x1A:
00017b cfff      	RJMP _0x1A
                 ; .FEND
                 
                 	.DSEG
                 _0x19:
000300           	.BYTE 0x2D
                 
                 	.DSEG
                 _adc_value:
00032d           	.BYTE 0x4
                 _voltage_val:
000331           	.BYTE 0x4
                 _demi_part:
000335           	.BYTE 0x4
                 _int_part:
000339           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
00017c 91a0 0331 	LDS  R26,_voltage_val
00017e 91b0 0332 	LDS  R27,_voltage_val+1
000180 9180 0333 	LDS  R24,_voltage_val+2
000182 9190 0334 	LDS  R25,_voltage_val+3
                +
000184 e6e4     +LDI R30 , LOW ( 0x64 )
000185 e0f0     +LDI R31 , HIGH ( 0x64 )
000186 e060     +LDI R22 , BYTE3 ( 0x64 )
000187 e070     +LDI R23 , BYTE4 ( 0x64 )
                 	__GETD1N 0x64
000188 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
000189 935a      	ST   -Y,R21
                 __SAVELOCR5:
00018a 934a      	ST   -Y,R20
                 __SAVELOCR4:
00018b 933a      	ST   -Y,R19
                 __SAVELOCR3:
00018c 932a      	ST   -Y,R18
                 __SAVELOCR2:
00018d 931a      	ST   -Y,R17
00018e 930a      	ST   -Y,R16
00018f 9508      	RET
                 
                 __LOADLOCR6:
000190 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000191 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000192 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000193 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000194 8119      	LDD  R17,Y+1
000195 8108      	LD   R16,Y
000196 9508      	RET
                 
                 __ANEGW1:
000197 95f1      	NEG  R31
000198 95e1      	NEG  R30
000199 40f0      	SBCI R31,0
00019a 9508      	RET
                 
                 __LSLB12:
00019b 23ee      	TST  R30
00019c 2e0e      	MOV  R0,R30
00019d 2fea      	MOV  R30,R26
00019e f019      	BREQ __LSLB12R
                 __LSLB12L:
00019f 0fee      	LSL  R30
0001a0 940a      	DEC  R0
0001a1 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
0001a2 9508      	RET
                 
                 __MULD12U:
0001a3 9f7a      	MUL  R23,R26
0001a4 2d70      	MOV  R23,R0
0001a5 9f6b      	MUL  R22,R27
0001a6 0d70      	ADD  R23,R0
0001a7 9ff8      	MUL  R31,R24
0001a8 0d70      	ADD  R23,R0
0001a9 9fe9      	MUL  R30,R25
0001aa 0d70      	ADD  R23,R0
0001ab 9f6a      	MUL  R22,R26
0001ac 2d60      	MOV  R22,R0
0001ad 0d71      	ADD  R23,R1
0001ae 9ffb      	MUL  R31,R27
0001af 0d60      	ADD  R22,R0
0001b0 1d71      	ADC  R23,R1
0001b1 9fe8      	MUL  R30,R24
0001b2 0d60      	ADD  R22,R0
0001b3 1d71      	ADC  R23,R1
0001b4 2788      	CLR  R24
0001b5 9ffa      	MUL  R31,R26
0001b6 2df0      	MOV  R31,R0
0001b7 0d61      	ADD  R22,R1
0001b8 1f78      	ADC  R23,R24
0001b9 9feb      	MUL  R30,R27
0001ba 0df0      	ADD  R31,R0
0001bb 1d61      	ADC  R22,R1
0001bc 1f78      	ADC  R23,R24
0001bd 9fea      	MUL  R30,R26
0001be 2de0      	MOV  R30,R0
0001bf 0df1      	ADD  R31,R1
0001c0 1f68      	ADC  R22,R24
0001c1 1f78      	ADC  R23,R24
0001c2 9508      	RET
                 
                 __DIVW21U:
0001c3 2400      	CLR  R0
0001c4 2411      	CLR  R1
0001c5 e190      	LDI  R25,16
                 __DIVW21U1:
0001c6 0faa      	LSL  R26
0001c7 1fbb      	ROL  R27
0001c8 1c00      	ROL  R0
0001c9 1c11      	ROL  R1
0001ca 1a0e      	SUB  R0,R30
0001cb 0a1f      	SBC  R1,R31
0001cc f418      	BRCC __DIVW21U2
0001cd 0e0e      	ADD  R0,R30
0001ce 1e1f      	ADC  R1,R31
0001cf c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0001d0 60a1      	SBR  R26,1
                 __DIVW21U3:
0001d1 959a      	DEC  R25
0001d2 f799      	BRNE __DIVW21U1
0001d3 01fd      	MOVW R30,R26
0001d4 01d0      	MOVW R26,R0
0001d5 9508      	RET
                 
                 __DIVW21:
0001d6 d03a      	RCALL __CHKSIGNW
0001d7 dfeb      	RCALL __DIVW21U
0001d8 f40e      	BRTC __DIVW211
0001d9 dfbd      	RCALL __ANEGW1
                 __DIVW211:
0001da 9508      	RET
                 
                 __DIVD21U:
0001db 933f      	PUSH R19
0001dc 934f      	PUSH R20
0001dd 935f      	PUSH R21
0001de 2400      	CLR  R0
0001df 2411      	CLR  R1
0001e0 01a0      	MOVW R20,R0
0001e1 e230      	LDI  R19,32
                 __DIVD21U1:
0001e2 0faa      	LSL  R26
0001e3 1fbb      	ROL  R27
0001e4 1f88      	ROL  R24
0001e5 1f99      	ROL  R25
0001e6 1c00      	ROL  R0
0001e7 1c11      	ROL  R1
0001e8 1f44      	ROL  R20
0001e9 1f55      	ROL  R21
0001ea 1a0e      	SUB  R0,R30
0001eb 0a1f      	SBC  R1,R31
0001ec 0b46      	SBC  R20,R22
0001ed 0b57      	SBC  R21,R23
0001ee f428      	BRCC __DIVD21U2
0001ef 0e0e      	ADD  R0,R30
0001f0 1e1f      	ADC  R1,R31
0001f1 1f46      	ADC  R20,R22
0001f2 1f57      	ADC  R21,R23
0001f3 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0001f4 60a1      	SBR  R26,1
                 __DIVD21U3:
0001f5 953a      	DEC  R19
0001f6 f759      	BRNE __DIVD21U1
0001f7 01fd      	MOVW R30,R26
0001f8 01bc      	MOVW R22,R24
0001f9 01d0      	MOVW R26,R0
0001fa 01ca      	MOVW R24,R20
0001fb 915f      	POP  R21
0001fc 914f      	POP  R20
0001fd 913f      	POP  R19
0001fe 9508      	RET
                 
                 __MODW21:
0001ff 94e8      	CLT
000200 ffb7      	SBRS R27,7
000201 c004      	RJMP __MODW211
000202 95b1      	NEG  R27
000203 95a1      	NEG  R26
000204 40b0      	SBCI R27,0
000205 9468      	SET
                 __MODW211:
000206 fdf7      	SBRC R31,7
000207 df8f      	RCALL __ANEGW1
000208 dfba      	RCALL __DIVW21U
000209 01fd      	MOVW R30,R26
00020a f40e      	BRTC __MODW212
00020b df8b      	RCALL __ANEGW1
                 __MODW212:
00020c 9508      	RET
                 
                 __MODD21U:
00020d dfcd      	RCALL __DIVD21U
00020e 01fd      	MOVW R30,R26
00020f 01bc      	MOVW R22,R24
000210 9508      	RET
                 
                 __CHKSIGNW:
000211 94e8      	CLT
000212 fff7      	SBRS R31,7
000213 c002      	RJMP __CHKSW1
000214 df82      	RCALL __ANEGW1
000215 9468      	SET
                 __CHKSW1:
000216 ffb7      	SBRS R27,7
000217 c006      	RJMP __CHKSW2
000218 95b1      	NEG  R27
000219 95a1      	NEG  R26
00021a 40b0      	SBCI R27,0
00021b f800      	BLD  R0,0
00021c 9403      	INC  R0
00021d fa00      	BST  R0,0
                 __CHKSW2:
00021e 9508      	RET
                 
                 _delay_ms:
00021f 9610      	adiw r26,0
000220 f039      	breq __delay_ms1
                 __delay_ms0:
000221 95a8      	wdr
                +
000222 ed80     +LDI R24 , LOW ( 0x7D0 )
000223 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000224 9701     +SBIW R24 , 1
000225 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000226 9711      	sbiw r26,1
000227 f7c9      	brne __delay_ms0
                 __delay_ms1:
000228 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :  35 r1 :  17 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:  12 r17:  15 r18:   6 r19:   8 r20:  14 r21:   9 r22:  27 r23:  21 
r24:  23 r25:   9 r26:  62 r27:  32 r28:   5 r29:   1 r30:  81 r31:  29 
x  :  10 y  :  23 z  :   7 
Registers used: 21 out of 35 (60.0%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  13 add   :  13 
adiw  :   4 and   :   0 andi  :   2 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   2 brcs  :   0 break :   0 breq  :   6 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   0 brmi  :   0 brne  :  10 brpl  :   0 brsh  :   0 brtc  :   2 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  :   0 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  10 cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :   0 
cp    :   1 cpc   :   1 cpi   :   2 cpse  :   0 dec   :   4 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   0 inc   :   1 jmp   :  27 ld    :   9 ldd   :   7 ldi   :  62 
lds   :  22 lpm   :   7 lsl   :   3 lsr   :   0 mov   :  13 movw  :  28 
mul   :  10 muls  :   0 mulsu :   0 neg   :   6 nop   :   0 or    :   2 
ori   :   3 out   :   6 pop   :   3 push  :   3 rcall :  36 ret   :  17 
reti  :   0 rjmp  :  11 rol   :  10 ror   :   0 sbc   :   4 sbci  :   6 
sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :   7 sbr   :   2 sbrc  :   1 
sbrs  :   3 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  17 std   :   0 sts   :  25 sub   :   2 subi  :   4 swap  :   0 
tst   :   1 wdr   :   1 
Instructions used: 53 out of 116 (45.7%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000452   1024     82   1106   32768   3.4%
[.dseg] 0x000100 0x00033d      0     61     61    2048   3.0%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 2 warnings
