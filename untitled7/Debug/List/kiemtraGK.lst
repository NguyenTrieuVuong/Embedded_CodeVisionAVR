
AVRASM ver. 2.1.30  E:\CodeVisionAVR\untitled7\Debug\List\kiemtraGK.asm Thu Apr 13 10:01:59 2023

                 
                 
                 ;CodeVisionAVR C Compiler V3.51 Evaluation
                 ;(C) Copyright 1998-2023 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPMCSR=0x37
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 	.EQU __EEPROM_PAGE_SIZE=0x04
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0075 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 _0x0:
000034 6947
000035 2061
000036 7274
000037 2069      	.DB  0x47,0x69,0x61,0x20,0x74,0x72,0x69,0x20
000038 4441
000039 3a43
00003a 0020
00003b 000a      	.DB  0x41,0x44,0x43,0x3A,0x20,0x0,0xA,0x0
00003c 6947
00003d 2061
00003e 7274
00003f 2069      	.DB  0x47,0x69,0x61,0x20,0x74,0x72,0x69,0x20
000040 6964
000041 6e65
000042 6120
000043 3a70      	.DB  0x64,0x69,0x65,0x6E,0x20,0x61,0x70,0x3A
000044 0020
000045 002e
000046 7620
000047 6c6f      	.DB  0x20,0x0,0x2E,0x0,0x20,0x76,0x6F,0x6C
000048 0a20
000049 5300
00004a 7379
00004b 6574      	.DB  0x20,0xA,0x0,0x53,0x79,0x73,0x74,0x65
00004c 206d
00004d 6c41
00004e 7261
00004f 006d      	.DB  0x6D,0x20,0x41,0x6C,0x61,0x72,0x6D,0x0
000050 6c41
000051 7261
000052 206d
000053 764f      	.DB  0x41,0x6C,0x61,0x72,0x6D,0x20,0x4F,0x76
000054 7265
E:\CodeVisionAVR\untitled7\Debug\List\kiemtraGK.asm(1465): warning: .cseg .db misalignment - padding zero byte
000055 0000      	.DB  0x65,0x72,0x0
                 
                 __GLOBAL_INI_TBL:
000056 000e      	.DW  0x0E
000057 0300      	.DW  _0x16
000058 0068      	.DW  _0x0*2
                 
000059 0002      	.DW  0x02
00005a 030e      	.DW  _0x16+14
00005b 0076      	.DW  _0x0*2+14
                 
00005c 0002      	.DW  0x02
00005d 0310      	.DW  _0x16+16
00005e 0076      	.DW  _0x0*2+14
                 
00005f 0012      	.DW  0x12
000060 0312      	.DW  _0x16+18
000061 0078      	.DW  _0x0*2+16
                 
000062 0002      	.DW  0x02
000063 0324      	.DW  _0x16+36
000064 008a      	.DW  _0x0*2+34
                 
000065 0007      	.DW  0x07
000066 0326      	.DW  _0x16+38
000067 008c      	.DW  _0x0*2+36
                 
000068 000d      	.DW  0x0D
000069 032d      	.DW  _0x16+45
00006a 0093      	.DW  _0x0*2+43
                 
00006b 0002      	.DW  0x02
00006c 033a      	.DW  _0x16+58
00006d 0076      	.DW  _0x0*2+14
                 
00006e 000b      	.DW  0x0B
00006f 033c      	.DW  _0x16+60
000070 00a0      	.DW  _0x0*2+56
                 
000071 0002      	.DW  0x02
000072 0347      	.DW  _0x16+71
000073 0076      	.DW  _0x0*2+14
                 
                 _0xFFFFFFFF:
000074 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000075 94f8      	CLI
000076 27ee      	CLR  R30
000077 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000078 e0f1      	LDI  R31,1
000079 bff5      	OUT  MCUCR,R31
00007a bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00007b e08d      	LDI  R24,(14-2)+1
00007c e0a2      	LDI  R26,2
00007d 27bb      	CLR  R27
                 __CLEAR_REG:
00007e 93ed      	ST   X+,R30
00007f 958a      	DEC  R24
000080 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000081 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000082 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000083 e0a0      	LDI  R26,LOW(__SRAM_START)
000084 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000085 93ed      	ST   X+,R30
000086 9701      	SBIW R24,1
000087 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000088 eaec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000089 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00008a 9185      	LPM  R24,Z+
00008b 9195      	LPM  R25,Z+
00008c 9700      	SBIW R24,0
00008d f061      	BREQ __GLOBAL_INI_END
00008e 91a5      	LPM  R26,Z+
00008f 91b5      	LPM  R27,Z+
000090 9005      	LPM  R0,Z+
000091 9015      	LPM  R1,Z+
000092 01bf      	MOVW R22,R30
000093 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000094 9005      	LPM  R0,Z+
000095 920d      	ST   X+,R0
000096 9701      	SBIW R24,1
000097 f7e1      	BRNE __GLOBAL_INI_LOOP
000098 01fb      	MOVW R30,R22
000099 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
00009a e0e0      	LDI  R30,__GPIOR0_INIT
00009b bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00009c efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00009d bfed      	OUT  SPL,R30
00009e e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00009f bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000a0 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000a1 e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000a2 940c 011d 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;void uart_init(void)
                 ; 0000 000C {
                 
                 	.CSEG
                 _uart_init:
                 ; .FSTART _uart_init
                 ; 0000 000D int n = baud_prescaler;
                 ; 0000 000E UBRR0H = (n >> 8);
0000a4 931a      	ST   -Y,R17
0000a5 930a      	ST   -Y,R16
                 ;	n -> R16,R17
                +
0000a6 e007     +LDI R16 , LOW ( 7 )
0000a7 e010     +LDI R17 , HIGH ( 7 )
                 	__GETWRN 16,17,7
0000a8 01f8      	MOVW R30,R16
                +
0000a9 2fef     +MOV R30 , R31
0000aa 27ff     +CLR R31
0000ab fde7     +SBRC R30 , 7
0000ac efff     +SER R31
                 	__ASRW8
0000ad 93e0 00c5 	STS  197,R30
                 ; 0000 000F UBRR0L = n;
0000af 9300 00c4 	STS  196,R16
                 ; 0000 0010 UCSR0C = 0b00000110;
0000b1 e0e6      	LDI  R30,LOW(6)
0000b2 93e0 00c2 	STS  194,R30
                 ; 0000 0011 UCSR0B = 0b10011000;
0000b4 e9e8      	LDI  R30,LOW(152)
0000b5 93e0 00c1 	STS  193,R30
                 ; 0000 0012 #asm("sei")
0000b7 9478      	SEI
                 ; 0000 0013 }
0000b8 c04e      	RJMP _0x2000001
                 ; .FEND
                 ;void uart_transmit(unsigned char data)
                 ; 0000 0016 {
                 _uart_transmit:
                 ; .FSTART _uart_transmit
                 ; 0000 0017 while(!(UCSR0A & 0b00100000));
0000b9 931a      	ST   -Y,R17
0000ba 2f1a      	MOV  R17,R26
                 ;	data -> R17
                 _0x3:
0000bb 91e0 00c0 	LDS  R30,192
0000bd 72e0      	ANDI R30,LOW(0x20)
0000be f3e1      	BREQ _0x3
                 ; 0000 0018 
                 ; 0000 0019 UDR0 = data;
0000bf 9310 00c6 	STS  198,R17
                 ; 0000 001A }
0000c1 9119      	LD   R17,Y+
0000c2 9508      	RET
                 ; .FEND
                 ;void putint(unsigned int value)
                 ; 0000 001D {
                 _putint:
                 ; .FSTART _putint
                 ; 0000 001E unsigned char buf[8];
                 ; 0000 001F int index = 0, i, j;
                 ; 0000 0020 j = value;
0000c3 93ba      	ST   -Y,R27
0000c4 93aa      	ST   -Y,R26
0000c5 9728      	SBIW R28,8
0000c6 d0f8      	RCALL __SAVELOCR6
                 ;	value -> Y+14
                 ;	buf -> Y+6
                 ;	index -> R16,R17
                 ;	i -> R18,R19
                 ;	j -> R20,R21
                +
0000c7 e000     +LDI R16 , LOW ( 0 )
0000c8 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0000c9 854e     +LDD R20 , Y + 14
0000ca 855f     +LDD R21 , Y + 14 + 1
                 	__GETWRS 20,21,14
                 ; 0000 0021 do
                 _0x7:
                 ; 0000 0022 {
                 ; 0000 0023 buf[index] = j % 10 + 48;
0000cb 01f8      	MOVW R30,R16
0000cc 01de      	MOVW R26,R28
0000cd 9616      	ADIW R26,6
0000ce 0fea      	ADD  R30,R26
0000cf 1ffb      	ADC  R31,R27
0000d0 01bf      	MOVW R22,R30
0000d1 01da      	MOVW R26,R20
0000d2 e0ea      	LDI  R30,LOW(10)
0000d3 e0f0      	LDI  R31,HIGH(10)
0000d4 d158      	RCALL __MODW21
0000d5 5de0      	SUBI R30,-LOW(48)
0000d6 01db      	MOVW R26,R22
0000d7 93ec      	ST   X,R30
                 ; 0000 0024 j = j / 10;
0000d8 01da      	MOVW R26,R20
0000d9 e0ea      	LDI  R30,LOW(10)
0000da e0f0      	LDI  R31,HIGH(10)
0000db d128      	RCALL __DIVW21
0000dc 01af      	MOVW R20,R30
                 ; 0000 0025 index += 1;
                +
0000dd 5f0f     +SUBI R16 , LOW ( - 1 )
0000de 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 0026 }
                 ; 0000 0027 while(j);
0000df 2e04      	MOV  R0,R20
0000e0 2a05      	OR   R0,R21
0000e1 f749      	BRNE _0x7
                 ; 0000 0028 for (i = index; i > 0; i--)
0000e2 0198      	MOVW R18,R16
                 _0xA:
0000e3 2400      	CLR  R0
0000e4 1602      	CP   R0,R18
0000e5 0603      	CPC  R0,R19
0000e6 f45c      	BRGE _0xB
                 ; 0000 0029 uart_transmit(buf[i - 1]);
0000e7 01f9      	MOVW R30,R18
0000e8 9731      	SBIW R30,1
0000e9 01de      	MOVW R26,R28
0000ea 9616      	ADIW R26,6
0000eb 0fae      	ADD  R26,R30
0000ec 1fbf      	ADC  R27,R31
0000ed 91ac      	LD   R26,X
0000ee dfca      	RCALL _uart_transmit
                +
0000ef 5021     +SUBI R18 , LOW ( 1 )
0000f0 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
0000f1 cff1      	RJMP _0xA
                 _0xB:
                 ; 0000 002A }
0000f2 d0d3      	RCALL __LOADLOCR6
0000f3 9660      	ADIW R28,16
0000f4 9508      	RET
                 ; .FEND
                 ;void putstring(unsigned char *str)
                 ; 0000 002D {
                 _putstring:
                 ; .FSTART _putstring
                 ; 0000 002E while(*str)
0000f5 931a      	ST   -Y,R17
0000f6 930a      	ST   -Y,R16
0000f7 018d      	MOVW R16,R26
                 ;	*str -> R16,R17
                 _0xC:
0000f8 01d8      	MOVW R26,R16
0000f9 91ec      	LD   R30,X
0000fa 30e0      	CPI  R30,0
0000fb f059      	BREQ _0xE
                 ; 0000 002F {
                 ; 0000 0030 uart_transmit(*str);
0000fc 91ac      	LD   R26,X
0000fd dfbb      	RCALL _uart_transmit
                 ; 0000 0031 if (*str == '\n')
0000fe 01d8      	MOVW R26,R16
0000ff 91ac      	LD   R26,X
000100 30aa      	CPI  R26,LOW(0xA)
000101 f411      	BRNE _0xF
                 ; 0000 0032 uart_transmit('\r');
000102 e0ad      	LDI  R26,LOW(13)
000103 dfb5      	RCALL _uart_transmit
                 ; 0000 0033 str++;
                 _0xF:
                +
000104 5f0f     +SUBI R16 , LOW ( - 1 )
000105 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 0034 }
000106 cff1      	RJMP _0xC
                 _0xE:
                 ; 0000 0035 }
                 _0x2000001:
000107 9109      	LD   R16,Y+
000108 9119      	LD   R17,Y+
000109 9508      	RET
                 ; .FEND
                 ;void init_adc(void){
                 ; 0000 0037 void init_adc(void){
                 _init_adc:
                 ; .FSTART _init_adc
                 ; 0000 0038 ADMUX |= (1<<REFS0);
00010a 91e0 007c 	LDS  R30,124
00010c 64e0      	ORI  R30,0x40
00010d 93e0 007c 	STS  124,R30
                 ; 0000 0039 ADCSRA |= 0b10000111;
00010f 91e0 007a 	LDS  R30,122
000111 68e7      	ORI  R30,LOW(0x87)
000112 93e0 007a 	STS  122,R30
                 ; 0000 003A DIDR0 |= 0x01;
000114 91e0 007e 	LDS  R30,126
000116 60e1      	ORI  R30,1
000117 93e0 007e 	STS  126,R30
                 ; 0000 003B delay_ms(10);
000119 e0aa      	LDI  R26,LOW(10)
00011a e0b0      	LDI  R27,0
00011b d131      	RCALL _delay_ms
                 ; 0000 003C 
                 ; 0000 003D }
00011c 9508      	RET
                 ; .FEND
                 ;void main(void)
                 ; 0000 0040 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0041 uart_init();
00011d df86      	RCALL _uart_init
                 ; 0000 0042 init_adc();
00011e dfeb      	RCALL _init_adc
                 ; 0000 0043 while (1)
                 _0x10:
                 ; 0000 0044 {
                 ; 0000 0045 // Please write your application code here
                 ; 0000 0046 ADCSRA |= 0b01000000;
00011f 91e0 007a 	LDS  R30,122
000121 64e0      	ORI  R30,0x40
000122 93e0 007a 	STS  122,R30
                 ; 0000 0047 while((ADCSRA & 0b00010000) ==0);
                 _0x13:
000124 91e0 007a 	LDS  R30,122
000126 71e0      	ANDI R30,LOW(0x10)
000127 f3e1      	BREQ _0x13
                 ; 0000 0048 adc_value = ADCW;
000128 91e0 0078 	LDS  R30,120
00012a 91f0 0079 	LDS  R31,120+1
00012c 2766      	CLR  R22
00012d 2777      	CLR  R23
00012e 93e0 0349 	STS  _adc_value,R30
000130 93f0 034a 	STS  _adc_value+1,R31
000132 9360 034b 	STS  _adc_value+2,R22
000134 9370 034c 	STS  _adc_value+3,R23
                 ; 0000 0049 ADCSRA |= 0b00010000;
000136 91e0 007a 	LDS  R30,122
000138 61e0      	ORI  R30,0x10
000139 93e0 007a 	STS  122,R30
                 ; 0000 004A putstring("Gia tri ADC: ");
                +
00013b e0a0     +LDI R26 , LOW ( _0x16 + ( 0 ) )
00013c e0b3     +LDI R27 , HIGH ( _0x16 + ( 0 ) )
                 	__POINTW2MN _0x16,0
00013d dfb7      	RCALL _putstring
                 ; 0000 004B putint(adc_value);
00013e 91a0 0349 	LDS  R26,_adc_value
000140 91b0 034a 	LDS  R27,_adc_value+1
000142 df80      	RCALL _putint
                 ; 0000 004C putstring("\n");
                +
000143 e0ae     +LDI R26 , LOW ( _0x16 + ( 14 ) )
000144 e0b3     +LDI R27 , HIGH ( _0x16 + ( 14 ) )
                 	__POINTW2MN _0x16,14
000145 dfaf      	RCALL _putstring
                 ; 0000 004D voltage_val = adc_value*500/1024;
000146 91e0 0349 	LDS  R30,_adc_value
000148 91f0 034a 	LDS  R31,_adc_value+1
00014a 9160 034b 	LDS  R22,_adc_value+2
00014c 9170 034c 	LDS  R23,_adc_value+3
                +
00014e efa4     +LDI R26 , LOW ( 0x1F4 )
00014f e0b1     +LDI R27 , HIGH ( 0x1F4 )
000150 e080     +LDI R24 , BYTE3 ( 0x1F4 )
000151 e090     +LDI R25 , BYTE4 ( 0x1F4 )
                 	__GETD2N 0x1F4
000152 d07e      	RCALL __MULD12U
000153 01df      	MOVW R26,R30
000154 01cb      	MOVW R24,R22
                +
000155 e0e0     +LDI R30 , LOW ( 0x400 )
000156 e0f4     +LDI R31 , HIGH ( 0x400 )
000157 e060     +LDI R22 , BYTE3 ( 0x400 )
000158 e070     +LDI R23 , BYTE4 ( 0x400 )
                 	__GETD1N 0x400
000159 d0af      	RCALL __DIVD21U
00015a 93e0 034d 	STS  _voltage_val,R30
00015c 93f0 034e 	STS  _voltage_val+1,R31
00015e 9360 034f 	STS  _voltage_val+2,R22
000160 9370 0350 	STS  _voltage_val+3,R23
                 ; 0000 004E putint(voltage_val);
000162 91a0 034d 	LDS  R26,_voltage_val
000164 91b0 034e 	LDS  R27,_voltage_val+1
000166 df5c      	RCALL _putint
                 ; 0000 004F putstring("\n");
                +
000167 e1a0     +LDI R26 , LOW ( _0x16 + ( 16 ) )
000168 e0b3     +LDI R27 , HIGH ( _0x16 + ( 16 ) )
                 	__POINTW2MN _0x16,16
000169 df8b      	RCALL _putstring
                 ; 0000 0050 
                 ; 0000 0051 demi_part = voltage_val%100;
00016a d047      	RCALL SUBOPT_0x0
00016b d0cf      	RCALL __MODD21U
00016c 93e0 0351 	STS  _demi_part,R30
00016e 93f0 0352 	STS  _demi_part+1,R31
000170 9360 0353 	STS  _demi_part+2,R22
000172 9370 0354 	STS  _demi_part+3,R23
                 ; 0000 0052 int_part = voltage_val/100;
000174 d03d      	RCALL SUBOPT_0x0
000175 d093      	RCALL __DIVD21U
000176 93e0 0355 	STS  _int_part,R30
000178 93f0 0356 	STS  _int_part+1,R31
00017a 9360 0357 	STS  _int_part+2,R22
00017c 9370 0358 	STS  _int_part+3,R23
                 ; 0000 0053 putstring("Gia tri dien ap: ");
                +
00017e e1a2     +LDI R26 , LOW ( _0x16 + ( 18 ) )
00017f e0b3     +LDI R27 , HIGH ( _0x16 + ( 18 ) )
                 	__POINTW2MN _0x16,18
000180 df74      	RCALL _putstring
                 ; 0000 0054 putint(int_part);
000181 91a0 0355 	LDS  R26,_int_part
000183 91b0 0356 	LDS  R27,_int_part+1
000185 df3d      	RCALL _putint
                 ; 0000 0055 putstring(".");
                +
000186 e2a4     +LDI R26 , LOW ( _0x16 + ( 36 ) )
000187 e0b3     +LDI R27 , HIGH ( _0x16 + ( 36 ) )
                 	__POINTW2MN _0x16,36
000188 df6c      	RCALL _putstring
                 ; 0000 0056 putint(demi_part);
000189 91a0 0351 	LDS  R26,_demi_part
00018b 91b0 0352 	LDS  R27,_demi_part+1
00018d df35      	RCALL _putint
                 ; 0000 0057 putstring(" vol \n");
                +
00018e e2a6     +LDI R26 , LOW ( _0x16 + ( 38 ) )
00018f e0b3     +LDI R27 , HIGH ( _0x16 + ( 38 ) )
                 	__POINTW2MN _0x16,38
000190 df64      	RCALL _putstring
                 ; 0000 0058 delay_ms(3000);
000191 eba8      	LDI  R26,LOW(3000)
000192 e0bb      	LDI  R27,HIGH(3000)
000193 d0b9      	RCALL _delay_ms
                 ; 0000 0059 if (adc_value>800)
000194 91a0 0349 	LDS  R26,_adc_value
000196 91b0 034a 	LDS  R27,_adc_value+1
000198 9180 034b 	LDS  R24,_adc_value+2
00019a 9190 034c 	LDS  R25,_adc_value+3
                +
00019c 32a1     +CPI R26 , LOW ( 0x321 )
00019d e0e3     +LDI R30 , HIGH ( 0x321 )
00019e 07be     +CPC R27 , R30
00019f e0e0     +LDI R30 , BYTE3 ( 0x321 )
0001a0 078e     +CPC R24 , R30
0001a1 e0e0     +LDI R30 , BYTE4 ( 0x321 )
0001a2 079e     +CPC R25 , R30
                 	__CPD2N 0x321
0001a3 f030      	BRLO _0x17
                 ; 0000 005A {
                 ; 0000 005B putstring("System Alarm");
                +
0001a4 e2ad     +LDI R26 , LOW ( _0x16 + ( 45 ) )
0001a5 e0b3     +LDI R27 , HIGH ( _0x16 + ( 45 ) )
                 	__POINTW2MN _0x16,45
0001a6 df4e      	RCALL _putstring
                 ; 0000 005C putstring("\n");
                +
0001a7 e3aa     +LDI R26 , LOW ( _0x16 + ( 58 ) )
0001a8 e0b3     +LDI R27 , HIGH ( _0x16 + ( 58 ) )
                 	__POINTW2MN _0x16,58
0001a9 c005      	RJMP _0x1A
                 ; 0000 005D 
                 ; 0000 005E }
                 ; 0000 005F else{
                 _0x17:
                 ; 0000 0060 putstring("Alarm Over");
                +
0001aa e3ac     +LDI R26 , LOW ( _0x16 + ( 60 ) )
0001ab e0b3     +LDI R27 , HIGH ( _0x16 + ( 60 ) )
                 	__POINTW2MN _0x16,60
0001ac df48      	RCALL _putstring
                 ; 0000 0061 putstring("\n");
                +
0001ad e4a7     +LDI R26 , LOW ( _0x16 + ( 71 ) )
0001ae e0b3     +LDI R27 , HIGH ( _0x16 + ( 71 ) )
                 	__POINTW2MN _0x16,71
                 _0x1A:
0001af df45      	RCALL _putstring
                 ; 0000 0062 }
                 ; 0000 0063 }
0001b0 cf6e      	RJMP _0x10
                 ; 0000 0064 }
                 _0x19:
0001b1 cfff      	RJMP _0x19
                 ; .FEND
                 
                 	.DSEG
                 _0x16:
000300           	.BYTE 0x49
                 
                 	.DSEG
                 _adc_value:
000349           	.BYTE 0x4
                 _voltage_val:
00034d           	.BYTE 0x4
                 _demi_part:
000351           	.BYTE 0x4
                 _int_part:
000355           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
0001b2 91a0 034d 	LDS  R26,_voltage_val
0001b4 91b0 034e 	LDS  R27,_voltage_val+1
0001b6 9180 034f 	LDS  R24,_voltage_val+2
0001b8 9190 0350 	LDS  R25,_voltage_val+3
                +
0001ba e6e4     +LDI R30 , LOW ( 0x64 )
0001bb e0f0     +LDI R31 , HIGH ( 0x64 )
0001bc e060     +LDI R22 , BYTE3 ( 0x64 )
0001bd e070     +LDI R23 , BYTE4 ( 0x64 )
                 	__GETD1N 0x64
0001be 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
0001bf 935a      	ST   -Y,R21
                 __SAVELOCR5:
0001c0 934a      	ST   -Y,R20
                 __SAVELOCR4:
0001c1 933a      	ST   -Y,R19
                 __SAVELOCR3:
0001c2 932a      	ST   -Y,R18
                 __SAVELOCR2:
0001c3 931a      	ST   -Y,R17
0001c4 930a      	ST   -Y,R16
0001c5 9508      	RET
                 
                 __LOADLOCR6:
0001c6 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0001c7 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0001c8 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0001c9 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0001ca 8119      	LDD  R17,Y+1
0001cb 8108      	LD   R16,Y
0001cc 9508      	RET
                 
                 __ANEGW1:
0001cd 95f1      	NEG  R31
0001ce 95e1      	NEG  R30
0001cf 40f0      	SBCI R31,0
0001d0 9508      	RET
                 
                 __MULD12U:
0001d1 9f7a      	MUL  R23,R26
0001d2 2d70      	MOV  R23,R0
0001d3 9f6b      	MUL  R22,R27
0001d4 0d70      	ADD  R23,R0
0001d5 9ff8      	MUL  R31,R24
0001d6 0d70      	ADD  R23,R0
0001d7 9fe9      	MUL  R30,R25
0001d8 0d70      	ADD  R23,R0
0001d9 9f6a      	MUL  R22,R26
0001da 2d60      	MOV  R22,R0
0001db 0d71      	ADD  R23,R1
0001dc 9ffb      	MUL  R31,R27
0001dd 0d60      	ADD  R22,R0
0001de 1d71      	ADC  R23,R1
0001df 9fe8      	MUL  R30,R24
0001e0 0d60      	ADD  R22,R0
0001e1 1d71      	ADC  R23,R1
0001e2 2788      	CLR  R24
0001e3 9ffa      	MUL  R31,R26
0001e4 2df0      	MOV  R31,R0
0001e5 0d61      	ADD  R22,R1
0001e6 1f78      	ADC  R23,R24
0001e7 9feb      	MUL  R30,R27
0001e8 0df0      	ADD  R31,R0
0001e9 1d61      	ADC  R22,R1
0001ea 1f78      	ADC  R23,R24
0001eb 9fea      	MUL  R30,R26
0001ec 2de0      	MOV  R30,R0
0001ed 0df1      	ADD  R31,R1
0001ee 1f68      	ADC  R22,R24
0001ef 1f78      	ADC  R23,R24
0001f0 9508      	RET
                 
                 __DIVW21U:
0001f1 2400      	CLR  R0
0001f2 2411      	CLR  R1
0001f3 e190      	LDI  R25,16
                 __DIVW21U1:
0001f4 0faa      	LSL  R26
0001f5 1fbb      	ROL  R27
0001f6 1c00      	ROL  R0
0001f7 1c11      	ROL  R1
0001f8 1a0e      	SUB  R0,R30
0001f9 0a1f      	SBC  R1,R31
0001fa f418      	BRCC __DIVW21U2
0001fb 0e0e      	ADD  R0,R30
0001fc 1e1f      	ADC  R1,R31
0001fd c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0001fe 60a1      	SBR  R26,1
                 __DIVW21U3:
0001ff 959a      	DEC  R25
000200 f799      	BRNE __DIVW21U1
000201 01fd      	MOVW R30,R26
000202 01d0      	MOVW R26,R0
000203 9508      	RET
                 
                 __DIVW21:
000204 d03a      	RCALL __CHKSIGNW
000205 dfeb      	RCALL __DIVW21U
000206 f40e      	BRTC __DIVW211
000207 dfc5      	RCALL __ANEGW1
                 __DIVW211:
000208 9508      	RET
                 
                 __DIVD21U:
000209 933f      	PUSH R19
00020a 934f      	PUSH R20
00020b 935f      	PUSH R21
00020c 2400      	CLR  R0
00020d 2411      	CLR  R1
00020e 01a0      	MOVW R20,R0
00020f e230      	LDI  R19,32
                 __DIVD21U1:
000210 0faa      	LSL  R26
000211 1fbb      	ROL  R27
000212 1f88      	ROL  R24
000213 1f99      	ROL  R25
000214 1c00      	ROL  R0
000215 1c11      	ROL  R1
000216 1f44      	ROL  R20
000217 1f55      	ROL  R21
000218 1a0e      	SUB  R0,R30
000219 0a1f      	SBC  R1,R31
00021a 0b46      	SBC  R20,R22
00021b 0b57      	SBC  R21,R23
00021c f428      	BRCC __DIVD21U2
00021d 0e0e      	ADD  R0,R30
00021e 1e1f      	ADC  R1,R31
00021f 1f46      	ADC  R20,R22
000220 1f57      	ADC  R21,R23
000221 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000222 60a1      	SBR  R26,1
                 __DIVD21U3:
000223 953a      	DEC  R19
000224 f759      	BRNE __DIVD21U1
000225 01fd      	MOVW R30,R26
000226 01bc      	MOVW R22,R24
000227 01d0      	MOVW R26,R0
000228 01ca      	MOVW R24,R20
000229 915f      	POP  R21
00022a 914f      	POP  R20
00022b 913f      	POP  R19
00022c 9508      	RET
                 
                 __MODW21:
00022d 94e8      	CLT
00022e ffb7      	SBRS R27,7
00022f c004      	RJMP __MODW211
000230 95b1      	NEG  R27
000231 95a1      	NEG  R26
000232 40b0      	SBCI R27,0
000233 9468      	SET
                 __MODW211:
000234 fdf7      	SBRC R31,7
000235 df97      	RCALL __ANEGW1
000236 dfba      	RCALL __DIVW21U
000237 01fd      	MOVW R30,R26
000238 f40e      	BRTC __MODW212
000239 df93      	RCALL __ANEGW1
                 __MODW212:
00023a 9508      	RET
                 
                 __MODD21U:
00023b dfcd      	RCALL __DIVD21U
00023c 01fd      	MOVW R30,R26
00023d 01bc      	MOVW R22,R24
00023e 9508      	RET
                 
                 __CHKSIGNW:
00023f 94e8      	CLT
000240 fff7      	SBRS R31,7
000241 c002      	RJMP __CHKSW1
000242 df8a      	RCALL __ANEGW1
000243 9468      	SET
                 __CHKSW1:
000244 ffb7      	SBRS R27,7
000245 c006      	RJMP __CHKSW2
000246 95b1      	NEG  R27
000247 95a1      	NEG  R26
000248 40b0      	SBCI R27,0
000249 f800      	BLD  R0,0
00024a 9403      	INC  R0
00024b fa00      	BST  R0,0
                 __CHKSW2:
00024c 9508      	RET
                 
                 _delay_ms:
00024d 9610      	adiw r26,0
00024e f039      	breq __delay_ms1
                 __delay_ms0:
00024f 95a8      	wdr
                +
000250 ed80     +LDI R24 , LOW ( 0x7D0 )
000251 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000252 9701     +SBIW R24 , 1
000253 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000254 9711      	sbiw r26,1
000255 f7c9      	brne __delay_ms0
                 __delay_ms1:
000256 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :  33 r1 :  15 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:  16 r17:  13 r18:   6 r19:   8 r20:  14 r21:   9 r22:  25 r23:  21 
r24:  25 r25:  11 r26:  61 r27:  37 r28:   5 r29:   1 r30:  84 r31:  32 
x  :   8 y  :  24 z  :   7 
Registers used: 21 out of 35 (60.0%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  13 add   :  13 
adiw  :   4 and   :   0 andi  :   2 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   2 brcs  :   0 break :   0 breq  :   5 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   1 
brlt  :   0 brmi  :   0 brne  :   9 brpl  :   0 brsh  :   0 brtc  :   2 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  :   0 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  11 cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :   0 
cp    :   1 cpc   :   4 cpi   :   3 cpse  :   0 dec   :   3 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   0 inc   :   1 jmp   :  27 ld    :   8 ldd   :   7 ldi   :  68 
lds   :  29 lpm   :   7 lsl   :   2 lsr   :   0 mov   :   7 movw  :  29 
mul   :  10 muls  :   0 mulsu :   0 neg   :   6 nop   :   0 or    :   1 
ori   :   5 out   :   6 pop   :   3 push  :   3 rcall :  38 ret   :  16 
reti  :   0 rjmp  :  12 rol   :  10 ror   :   0 sbc   :   4 sbci  :   6 
sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :   7 sbr   :   2 sbrc  :   2 
sbrs  :   3 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   1 
ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  17 std   :   0 sts   :  26 sub   :   2 subi  :   4 swap  :   0 
tst   :   0 wdr   :   1 
Instructions used: 54 out of 116 (46.6%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0004ae   1068    130   1198   32768   3.7%
[.dseg] 0x000100 0x000359      0     89     89    2048   4.3%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 1 warnings
