;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;interrupt [15] void timer0_compa_isr(void)
; 0000 000B {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000C 
; 0000 000D PORTD.5 = !PORTD.5;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 000E }
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;void main(void)
; 0000 0010 {
;PCODE: $0000001C VOL: 0
; 0000 0011 CLKPR = (1 << CLKPCE);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0012 CLKPR = 0b00000101;  // divider 32
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0013 // set PD6 as output
; 0000 0014 DDRD |= 0b01100000;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0015 PORTD = 0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0016 // Configure Timer 0 in CTC mode, prescaler = 1024, Output freq = 1Hz
; 0000 0017 TCCR0A = 0b01000010;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0018 TCCR0B = 0b00000101;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0019 OCR0A = 244;  // 500000/(2*1024)
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 001A 
; 0000 001B // TIMSK and global enable interrupts
; 0000 001C TIMSK0 = 0b00000010;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 001D #asm("sei")
;PCODE: $0000002E VOL: 0
; 0000 001E 
; 0000 001F while (1)
;PCODE: $0000002F VOL: 0
; 0000 0020 {
; 0000 0021 // Please write your application code here
; 0000 0022 
; 0000 0023 }
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0024 }
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
