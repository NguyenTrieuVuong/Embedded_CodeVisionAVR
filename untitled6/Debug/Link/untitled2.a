;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;void uart_init(void)
; 0000 0012 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0013 UBRR0H = (UBRR_VALUE >> 8);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0014 UBRR0L = UBRR_VALUE;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0015 UCSR0C = 0b00000110;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0016 UCSR0B = 0b10011000;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0017 }
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;void uart_transmit(unsigned char data)
; 0000 001B {
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 001C while(!(UCSR0A & 0b00100000));
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;	data -> R17
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 001D 
; 0000 001E UDR0 = data;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 001F }
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;void putint(unsigned int value)
; 0000 0022 {
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0023 unsigned char buf[8];
; 0000 0024 int index = 0, i, j;
; 0000 0025 j = value;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;	value -> Y+14
;	buf -> Y+6
;	index -> R16,R17
;	i -> R18,R19
;	j -> R20,R21
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0026 do
;PCODE: $00000031 VOL: 0
; 0000 0027 {
; 0000 0028 buf[index] = j % 10 + 48;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0029 j = j / 10;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 002A index += 1;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 002B }
; 0000 002C while(j);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 002D for (i = index; i > 0; i--)
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 002E uart_transmit(buf[i - 1]);
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 002F uart_transmit('\r');
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0030 }
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;interrupt [14] void timer1_ovf_isr(void)
; 0000 0032 {
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0033 //if (counter0 >= 256)
; 0000 0034 //	{
; 0000 0035 //	TCNT0 = 0;
; 0000 0036 
; 0000 0037 if(check == 0)
;PCODE: $00000062 VOL: 1
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0038 {
; 0000 0039 putint(TCNT0);
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 003A PORTB.5 = 1;
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 003B TCNT1H = 0xE1;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 003C TCNT1L = 0x7B;
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 003D check = 1;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 1
; 0000 003E }
; 0000 003F else{
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0040 PORTB.5 = 0;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0041 TCNT1H = 0xE1;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0042 TCNT1L = 0x7B;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0043 check = 0;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 1
; 0000 0044 }
;PCODE: $0000007B VOL: 0
; 0000 0045 //else
; 0000 0046 //	counter0 = 0;
; 0000 0047 }
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;void main(void)
; 0000 004A {
;PCODE: $0000007F VOL: 0
; 0000 004B uart_init(); // Kh?i t?o UART
;PCODE: $00000080 VOL: 0
; 0000 004C CLKPR = (1 << CLKPCE);
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 004D CLKPR = 0b00000000;      // Dat he so chia la 1
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 004E DDRB |= 0b00100000;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 004F PORTB &= 0b11011111;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0050 TCCR1A = 0b00000000;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0051 TCCR1B = 0b00000101;
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0052 TCNT1H = 0xE1;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0053 TCNT1L = 0x7B;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0054 TCCR0A = 0b00000000;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0055 TCCR0B = (1 << CS02) | (1 << CS00); // C?u hình Timer0 ch?y ? ch? d? b? chia t?n 256
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0056 TCNT0 = 244;//Reset giá tr? d?m c?a Timer0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0057 //TIMSK0 = (1 << TOIE0); // B?t ng?t cho Timer0
; 0000 0058 TIMSK1 = 0b00000001;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0059 #asm("sei") // B?t ng?t toàn c?c
;PCODE: $00000099 VOL: 0
; 0000 005A while (1)
;PCODE: $0000009A VOL: 0
; 0000 005B {
; 0000 005C 
; 0000 005D }
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 005E }
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
